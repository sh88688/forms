{"ast":null,"code":"function checkValidity(value, rules) {\n  var validityObj = {\n    isValid: true,\n    errorText: \"\"\n  };\n\n  if (rules.required) {\n    validityObj.isValid = value.trim() !== \"\" && validityObj.isValid;\n    validityObj.errorText = value.trim() !== \"\" ? validityObj.errorText : \"* This field is required.\";\n  }\n\n  if (rules.minLength && value.trim() !== \"\") {\n    validityObj.isValid = value.length >= rules.minLength && validityObj.isValid;\n    validityObj.errorText = value.length >= rules.minLength ? validityObj.errorText : \"* Min Length is  \".concat(rules.minLength, \".\");\n  }\n\n  if (rules.maxLength && value.trim() !== \"\") {\n    validityObj.isValid = value.length <= rules.maxLength && validityObj.isValid;\n    validityObj.errorText = value.length <= rules.maxLength ? validityObj.errorText : \"* Max Length is \".concat(rules.maxLength, \".\");\n  }\n\n  if (rules.isEmail && value.trim() !== \"\") {\n    var regex = /^[_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\.[a-zA-Z]{2,3})$/;\n    validityObj.isValid = regex.test(value) && validityObj.isValid;\n    validityObj.errorText = regex.test(value) ? validityObj.errorText : \"Please enter a valid e-mail.\";\n  }\n\n  if (rules.isDigit && value.trim() !== \"\") {\n    var _regex = /^\\d+$/;\n    validityObj.isValid = _regex.test(value) && validityObj.isValid;\n    validityObj.errorText = _regex.test(value) ? validityObj.errorText : \"Please enter only digits.\";\n  }\n\n  return validityObj;\n}\n\nexport default checkValidity;","map":{"version":3,"sources":["/home/c-zentrix/Documents/forms/src/Validator.js"],"names":["checkValidity","value","rules","validityObj","isValid","errorText","required","trim","minLength","length","maxLength","isEmail","regex","test","isDigit"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACjC,MAAIC,WAAW,GAAG;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAlB;;AAEA,MAAIH,KAAK,CAACI,QAAV,EAAoB;AAClBH,IAAAA,WAAW,CAACC,OAAZ,GAAsBH,KAAK,CAACM,IAAN,OAAiB,EAAjB,IAAuBJ,WAAW,CAACC,OAAzD;AACAD,IAAAA,WAAW,CAACE,SAAZ,GACEJ,KAAK,CAACM,IAAN,OAAiB,EAAjB,GAAsBJ,WAAW,CAACE,SAAlC,GAA8C,2BADhD;AAED;;AAED,MAAIH,KAAK,CAACM,SAAN,IAAmBP,KAAK,CAACM,IAAN,OAAiB,EAAxC,EAA4C;AAC1CJ,IAAAA,WAAW,CAACC,OAAZ,GACEH,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACM,SAAtB,IAAmCL,WAAW,CAACC,OADjD;AAEAD,IAAAA,WAAW,CAACE,SAAZ,GACEJ,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACM,SAAtB,GACIL,WAAW,CAACE,SADhB,8BAEwBH,KAAK,CAACM,SAF9B,MADF;AAID;;AAED,MAAIN,KAAK,CAACQ,SAAN,IAAmBT,KAAK,CAACM,IAAN,OAAiB,EAAxC,EAA4C;AAC1CJ,IAAAA,WAAW,CAACC,OAAZ,GACEH,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACQ,SAAtB,IAAmCP,WAAW,CAACC,OADjD;AAEAD,IAAAA,WAAW,CAACE,SAAZ,GACEJ,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACQ,SAAtB,GACIP,WAAW,CAACE,SADhB,6BAEuBH,KAAK,CAACQ,SAF7B,MADF;AAID;;AAED,MAAIR,KAAK,CAACS,OAAN,IAAiBV,KAAK,CAACM,IAAN,OAAiB,EAAtC,EAA0C;AACxC,QAAIK,KAAK,GAAG,sFAAZ;AAEAT,IAAAA,WAAW,CAACC,OAAZ,GACEQ,KAAK,CAACC,IAAN,CAAWZ,KAAX,KAAqBE,WAAW,CAACC,OADnC;AAEAD,IAAAA,WAAW,CAACE,SAAZ,GACEO,KAAK,CAACC,IAAN,CAAWZ,KAAX,IACIE,WAAW,CAACE,SADhB,GAEI,8BAHN;AAID;;AACD,MAAIH,KAAK,CAACY,OAAN,IAAiBb,KAAK,CAACM,IAAN,OAAiB,EAAtC,EAA0C;AACxC,QAAIK,MAAK,GAAG,OAAZ;AAEAT,IAAAA,WAAW,CAACC,OAAZ,GACEQ,MAAK,CAACC,IAAN,CAAWZ,KAAX,KAAqBE,WAAW,CAACC,OADnC;AAEAD,IAAAA,WAAW,CAACE,SAAZ,GACEO,MAAK,CAACC,IAAN,CAAWZ,KAAX,IACIE,WAAW,CAACE,SADhB,GAEI,2BAHN;AAID;;AAED,SAAOF,WAAP;AACD;;AAED,eAAeH,aAAf","sourcesContent":["function checkValidity(value, rules) {\n    let validityObj = { isValid: true, errorText: \"\" };\n    \n    if (rules.required) {\n      validityObj.isValid = value.trim() !== \"\" && validityObj.isValid;\n      validityObj.errorText =\n        value.trim() !== \"\" ? validityObj.errorText : \"* This field is required.\";\n    }\n  \n    if (rules.minLength && value.trim() !== \"\") {\n      validityObj.isValid =\n        value.length >= rules.minLength && validityObj.isValid;\n      validityObj.errorText =\n        value.length >= rules.minLength\n          ? validityObj.errorText\n          : `* Min Length is  ${rules.minLength}.`;\n    }\n  \n    if (rules.maxLength && value.trim() !== \"\") {\n      validityObj.isValid =\n        value.length <= rules.maxLength && validityObj.isValid;\n      validityObj.errorText =\n        value.length <= rules.maxLength\n          ? validityObj.errorText\n          : `* Max Length is ${rules.maxLength}.`;\n    }\n  \n    if (rules.isEmail && value.trim() !== \"\") {\n      let regex = /^[_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\.[a-zA-Z]{2,3})$/;\n\n      validityObj.isValid =\n        regex.test(value) && validityObj.isValid;\n      validityObj.errorText =\n        regex.test(value)\n          ? validityObj.errorText\n          : \"Please enter a valid e-mail.\";\n    }\n    if (rules.isDigit && value.trim() !== \"\") {\n      let regex = /^\\d+$/;\n\n      validityObj.isValid =\n        regex.test(value) && validityObj.isValid;\n      validityObj.errorText =\n        regex.test(value)\n          ? validityObj.errorText\n          : \"Please enter only digits.\";\n    }\n  \n    return validityObj;\n  }\n  \n  export default checkValidity;\n  "]},"metadata":{},"sourceType":"module"}